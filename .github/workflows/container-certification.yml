# This is a workflow for executing the container certification

name: container certification CI

env:
  USERNAME: ${{ secrets.USERNAME }}
  PASSWORD: ${{ secrets.PASSWORD }}
  IMAGE_REGISTRY: ${{ secrets.IMAGE_REGISTRY }}
  IMAGE_NAMESPACE: ${{ secrets.IMAGE_NAMESPACE }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  IMAGE_TAG: ${{ secrets.IMAGE_TAG }}
  ARCH: ${{ secrets.ARCH }}
  PYXIS_API_TOKEN: ${{ secrets.PYXIS_API_TOKEN }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build
  RH_certification:
      runs-on: ppc64le
      steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
          
      - name: Install preflight 
        run: |
          curl -s https://api.github.com/repos/redhat-openshift-ecosystem/openshift-preflight/releases/latest|grep browser_download_url |grep ppc64le|cut -d : -f 2,3|tr -d \"|xargs curl -LO
          chmod u+x preflight-linux-ppc64le
          mv preflight-linux-ppc64le /usr/local/bin/preflight
          chmod 777 /usr/local/bin/preflight
          preflight --version
          
      - name: Check container image
        run: |
          preflight check container "$IMAGE_REGISTRY"/"$IMAGE_NAMESPACE"/"$IMAGE_NAME":"$IMAGE_TAG"   

      - name: Login to image registry
        run: |
          podman login --username "$USERNAME" --password "$PASSWORD" "$IMAGE_REGISTRY"
        
      - name: Submit the certification results to Red Hat
        run: |
          preflight check container "$IMAGE_REGISTRY"/"$IMAGE_NAMESPACE"/"$IMAGE_NAME":"$IMAGE_TAG" --submit --pyxis-api-token="$PYXIS_API_TOKEN" --certification-project-id=626bb0c9c2384d3236b98814 --docker-config=${XDG_RUNTIME_DIR}/containers/auth.json
